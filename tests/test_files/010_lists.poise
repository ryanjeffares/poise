import std::iterables;
import std::list;

func main() {
    final list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    println(list);
    for i in list {
        if i % 2 == 0 {
            println(String(i) + " is even");
        } else {
            try {
                println(String(i) + " is odd");
                continue;
            } catch e {}
        }

        println("End of loop body");
    }

    assert(list.contains(5));
    var list1 = list.filter(|| (final item) => item % 2 == 0);

    println(list1);
    assert(!list1.contains(5));
    println(list.map(|| (final value) => value * 2));

    final names: List[String] = ["Ryan", "Syl", "Hays", "Jamie", "Sonya"];
    for name, index in names {
        println("The name at " + index + " is " + name);
        if name == "Hays" {
            try {
                name.foo();
            } catch e {
                println(e);
            }
        }

        if index == names.size() - 2  {
            break;
        }
    }

    names[names.size() - 1] = "Ivan";

    for i in 0..names.size() + 1 {
        println(try names[i]);
    }

    assert(List("Hello").size() == 5);
    assert(List(0..10).size() == 10);
    assert(List(names).size() == 5);

    assert(names.repeat(5).size() == 25);
    assert(names.concat(list).size() == 15);
}
