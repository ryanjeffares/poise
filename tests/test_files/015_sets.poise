import std::iterables;
import std::set;

func main() {
    final set = Set("Ryan", 42, none, true, 3.14, "Ryan");
    println(set);
    assert(set.size() == 5);

    final numbers = [0, 1, 2, 3, 4, 5, 6];
    assert(set.insert(numbers));
    assert(set.insert({("Ryan", 24), ("Puffle", 12)}));

    println(set);
    assert(set.contains("Ryan"));
    assert(!set.contains("Something"));
    assert(set.contains(numbers));

    for item in set {
        println("Item: " + item);
    }

    final a = Set(0, 1, 2);
    final b = Set(0, 1, 2, 3, 4, 5);
    assert(a.size() == 3);
    assert(b.size() == 6);

    assert(a.is_subset(b));
    assert(a <= b);
    assert(b.is_superset(a));
    assert(b >= a);

    assert(a.union(b).size() == 6);
    assert((a | b).size() == 6);
    assert(a.intersection(b).size() == 3);
    assert((a & b).size() == 3);
    assert(b.difference(a).size() == 3);
    assert((b - a).size() == 3);

    a.insert(-1);
    a.insert(-2);
    a.insert(-3);

    assert(a.symmetric_difference(b).size() == 6);
    assert((a ^ b).size() == 6);

    assert(a.remove(-1));
    assert(!a.remove("Foo"));
}
