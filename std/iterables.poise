import std::list;

export func size(this final List|Range|Tuple|Dict collection): Int => __NATIVE_ITERABLE_SIZE(collection);

export func for_each(this final List|Range|Tuple|Dict collection, final fn: Function) =>
    for item in collection {
        fn(item);
    }

export func map(this final List|Range|Tuple|Dict collection, final fn): List {
    final res = [];

    for item in collection {
        res.append(fn(item));
    }

    return res;
}

export func filter(this final List|Range|Tuple|Dict list, final predicate): List {
    final res = [];

    for item in list {
        if predicate(item) {
            res.append(item);
        }
    }

    return res;
}

